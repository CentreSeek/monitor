<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjjk.monitor.mapper.ZsEcgInfoMapper">
    <resultMap id="BaseResultMap" type="com.yjjk.monitor.entity.ZsEcgInfo">
        <id column="temperature_id" jdbcType="INTEGER" property="temperatureId"/>
        <result column="machine_id" jdbcType="VARCHAR" property="machineId"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="timestamp" jdbcType="BIGINT" property="timestamp"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yjjk.monitor.entity.ZsEcgInfo">
        <result column="ecg" jdbcType="LONGVARCHAR" property="ecg"/>
    </resultMap>
    <sql id="Base_Column_List">
    temperature_id, machine_id, create_time, `timestamp`
  </sql>
    <sql id="Blob_Column_List">
    ecg
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from zs_ecg_info
        where temperature_id = #{temperatureId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zs_ecg_info
    where temperature_id = #{temperatureId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.yjjk.monitor.entity.ZsEcgInfo">
    insert into zs_ecg_info (temperature_id, machine_id, create_time, 
      `timestamp`, ecg)
    values (#{temperatureId,jdbcType=INTEGER}, #{machineId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{timestamp,jdbcType=BIGINT}, #{ecg,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.yjjk.monitor.entity.ZsEcgInfo">
        insert into zs_ecg_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="temperatureId != null">
                temperature_id,
            </if>
            <if test="machineId != null">
                machine_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="timestamp != null">
                `timestamp`,
            </if>
            <if test="ecg != null">
                ecg,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="temperatureId != null">
                #{temperatureId,jdbcType=INTEGER},
            </if>
            <if test="machineId != null">
                #{machineId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timestamp != null">
                #{timestamp,jdbcType=BIGINT},
            </if>
            <if test="ecg != null">
                #{ecg,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yjjk.monitor.entity.ZsEcgInfo">
        update zs_ecg_info
        <set>
            <if test="machineId != null">
                machine_id = #{machineId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timestamp != null">
                `timestamp` = #{timestamp,jdbcType=BIGINT},
            </if>
            <if test="ecg != null">
                ecg = #{ecg,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where temperature_id = #{temperatureId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yjjk.monitor.entity.ZsEcgInfo">
    update zs_ecg_info
    set machine_id = #{machineId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `timestamp` = #{timestamp,jdbcType=BIGINT},
      ecg = #{ecg,jdbcType=LONGVARCHAR}
    where temperature_id = #{temperatureId,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.yjjk.monitor.entity.ZsEcgInfo">
    update zs_ecg_info
    set machine_id = #{machineId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `timestamp` = #{timestamp,jdbcType=BIGINT}
    where temperature_id = #{temperatureId,jdbcType=INTEGER}
  </update>

    <select id="getNewEcg" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        SELECT<include refid="Base_Column_List"/>,
        <include refid="Blob_Column_List"/>
        FROM `zs_ecg_info` WHERE machine_id = #{machineId,jdbcType=INTEGER} AND UNIX_TIMESTAMP()*1000 <![CDATA[<=]]> TIMESTAMP+1000*5 ORDER BY
        temperature_id DESC LIMIT 0,1;
    </select>

    <select id="getEcgHistoryAsJson" resultType="com.yjjk.monitor.entity.json.EcgHistory"
            parameterType="java.lang.Long">
        SELECT
        zei.ecg, zei.`timestamp` AS dateTime
        FROM `zs_ecg_info` zei
        LEFT JOIN zs_patient_record zpr on  zpr.`machine_id` = zei.`machine_id`
        WHERE
        zpr.status = 0
        and zei.`create_time` <![CDATA[>=]]> zpr.`start_time`
        AND zei.`create_time` <![CDATA[<=]]> now()
        AND zpr.`record_id` = #{record_id, jdbcType=BIGINT}
        ORDER BY zei.`temperature_id`;
    </select>

    <select id="getExportHealth" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
        CONCAT('{',zpr.`record_id`,',',zei.`ecg`,',',zei.create_time,'}',',')
        FROM zs_ecg_info zei
        LEFT JOIN `zs_patient_record` zpr ON zei.`machine_id`=zpr.`machine_id`
        WHERE zei.create_time <![CDATA[<]]> #{dateOfOneMonthAgo,jdbcType=VARCHAR};
    </select>
    <delete id="deleteByMachineId" parameterType="java.lang.Integer">
    delete from zs_ecg_info
    where machine_id = #{machineId,jdbcType=INTEGER}
  </delete>

</mapper>