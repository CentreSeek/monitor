<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.yjjk</groupId>
    <artifactId>monitor</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>monitor</name>
    <description>义金健康体温监控系统</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.0</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.15</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop -->
        <dependency>

            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <version>2.1.6.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>

        <!-- json -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.54</version>
        </dependency>

        <!-- log -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>

        <dependency>
            <groupId>com.aliyun</groupId>
            <artifactId>aliyun-java-sdk-core</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- 访问静态资源 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- Excel工具-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.17</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.17</version>
        </dependency>
        <!-- swagger test -->
        <dependency><!--添加Swagger依赖 -->
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency><!--添加Swagger-UI依赖 -->
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>

        <!-- beanUtils -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.3</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- 工程主入口-->
                    <mainClass>com.yjjk.monitor.MonitorApplication</mainClass>
                </configuration>
            </plugin>

            <!-- mybatis-generator -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.7</version>
                <configuration>
                    <!-- mybatis-generator的配置文件，根据情况调整位置 -->
                    <configurationFile>src/main/resources/mybatis-generator/generatorConfig.xml</configurationFile>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
                <executions>
                    <execution>
                        <id>Generate MyBatis Artifacts</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.mybatis.generator</groupId>
                        <artifactId>mybatis-generator-core</artifactId>
                        <version>1.3.7</version>
                    </dependency>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>8.0.15</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- proguard -->
            <!--            <plugin>-->
            <!--            <groupId>com.github.wvengen</groupId>-->
            <!--            <artifactId>proguard-maven-plugin</artifactId>-->
            <!--            <version>2.0.14</version>-->
            <!--            <executions>-->
            <!--                <execution>-->
            <!--                    &lt;!&ndash; 混淆时刻，这里是打包的时候混淆&ndash;&gt;-->
            <!--                    <phase>package</phase>-->
            <!--                    <goals>-->
            <!--                        &lt;!&ndash; 使用插件的什么功能，当然是混淆&ndash;&gt;-->
            <!--                        <goal>proguard</goal>-->
            <!--                    </goals>-->
            <!--                </execution>-->
            <!--            </executions>-->
            <!--            <configuration>-->
            <!--                <proguardVersion>6.0.2</proguardVersion>-->
            <!--                <obfuscate>true</obfuscate>-->
            <!--                &lt;!&ndash; 是否将生成的PG文件安装部署&ndash;&gt;-->
            <!--                <attach>true</attach>-->
            <!--                &lt;!&ndash; 是否混淆&ndash;&gt;-->
            <!--                <obfuscate>true</obfuscate>-->
            <!--                &lt;!&ndash; 指定生成文件分类 &ndash;&gt;-->
            <!--                <attachArtifactClassifier>pg</attachArtifactClassifier>-->
            <!--                <options>-->
            <!--                    &lt;!&ndash; JDK目标版本1.8&ndash;&gt;-->
            <!--                    <option>-target 1.8</option>-->
            <!--                    &lt;!&ndash; 不做收缩（删除注释、未被引用代码）&ndash;&gt;-->
            <!--                    <option>-dontshrink</option>-->
            <!--                    &lt;!&ndash; 不做优化（变更代码实现逻辑）&ndash;&gt;-->
            <!--                    <option>-dontoptimize</option>-->
            <!--                    &lt;!&ndash; 不路过非公用类文件及成员&ndash;&gt;-->
            <!--                    <option>-dontskipnonpubliclibraryclasses</option>-->
            <!--                    <option>-dontskipnonpubliclibraryclassmembers</option>-->
            <!--                    &lt;!&ndash; 优化时允许访问并修改有修饰符的类和类的成员 &ndash;&gt;-->
            <!--                    <option>-allowaccessmodification</option>-->
            <!--                    &lt;!&ndash; 确定统一的混淆类的成员名称来增加混淆,防止冲突&ndash;&gt;-->
            <!--                    <option>-useuniqueclassmembernames</option>-->
            <!--                    &lt;!&ndash; 不混淆所有包名，Spring配置中有大量固定写法的包名&ndash;&gt;-->
            <!--                    <option>-keeppackagenames</option>-->
            <!--                    &lt;!&ndash; 不混淆所有特殊的类&ndash;&gt;-->
            <!--                    <option>-keepattributes-->
            <!--                        Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod-->
            <!--                    </option>-->

            <!--                    &lt;!&ndash; success &ndash;&gt;-->
            <!--                    &lt;!&ndash; 以下因为大部分是Spring管理的Bean，不对包类的类名进行混淆，但对类中的属性和方法混淆&ndash;&gt;-->
            <!--                    <option>-keep class !com.yjjk.monitor.** { *; }</option>-->
            <!--                    <option>-keep class com.yjjk.monitor.controller.** {*;}</option>-->
            <!--                    <option>-keep class com.yjjk.monitor.service.impl.** {*;}</option>-->
            <!--                    <option>-keep class com.yjjk.monitor.aspect.** {*;}</option>-->
            <!--                    <option>-keep class com.yjjk.monitor.mapper.** {*;}</option>-->

            <!--                    &lt;!&ndash; 不混淆model包中的所有类以及类的属性及方法，实体包，混淆了会导致ORM框架及前端无法识别&ndash;&gt;-->
            <!--                    <option>-keep class com.yjjk.monitor.entity.** {*;}</option>-->
            <!--                    <option>-keep class com.yjjk.monitor.MonitorApplication {*;}</option>-->

            <!--                    &lt;!&ndash;                        &lt;!&ndash; 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射&ndash;&gt;&ndash;&gt;-->
            <!--                    &lt;!&ndash;                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>&ndash;&gt;-->
            <!--                    &lt;!&ndash;                        &lt;!&ndash; 以下因为大部分是Spring管理的Bean，不对包类的类名进行混淆，但对类中的属性和方法混淆&ndash;&gt;&ndash;&gt;-->
            <!--                    &lt;!&ndash;                        <option>-keep class com.yjjk.monitor.controller.**</option>&ndash;&gt;-->
            <!--                    &lt;!&ndash;                        <option>-keep class com.yjjk.monitor.service.impl.**</option>&ndash;&gt;-->
            <!--                    &lt;!&ndash;                        <option>-keep class com.yjjk.monitor.aspect.**</option>&ndash;&gt;&ndash;&gt;-->
            <!--                    &lt;!&ndash;                        <option>-keep class com.yjjk.monitor.mapper.**</option>&ndash;&gt;-->

            <!--                    &lt;!&ndash;不显示警告信息，如果显示则会出现Error无法完成混淆！&ndash;&gt;-->
            <!--                    <option>-dontwarn **</option>-->
            <!--                </options>-->
            <!--                <outjar>${project.build.finalName}-pg.jar</outjar>-->
            <!--                &lt;!&ndash; 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 &ndash;&gt;-->
            <!--                <libs>-->
            <!--                    <lib>${java.home}/lib/rt.jar</lib>-->
            <!--                    &lt;!&ndash;<lib>${java.home}/lib/jce.jar</lib>-->
            <!--                    <lib>${java.home}/lib/security/local_policy.jar</lib>-->
            <!--                    <lib>${java.home}/lib/security/US_export_policy.jar</lib>-->
            <!--                    <lib>${java.home}/lib/ext/sunjce_provider.jar</lib>&ndash;&gt;-->
            <!--                </libs>-->
            <!--                &lt;!&ndash; 加载文件的过滤器，就是你的工程目录了&ndash;&gt;-->
            <!--                &lt;!&ndash;                    <inFilter>com/yjjk/monitor/**</inFilter>&ndash;&gt;-->
            <!--                &lt;!&ndash; 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧&ndash;&gt;-->
            <!--                <injar>classes</injar>-->
            <!--                &lt;!&ndash; 输出目录&ndash;&gt;-->
            <!--                <outputDirectory>${project.build.directory}</outputDirectory>-->
            <!--            </configuration>-->
            <!--            <dependencies>-->
            <!--                &lt;!&ndash; 使用6.0.2版本来混淆 &ndash;&gt;-->
            <!--                <dependency>-->
            <!--                    <groupId>net.sf.proguard</groupId>-->
            <!--                    <artifactId>proguard-base</artifactId>-->
            <!--                    <version>6.0.2</version>-->
            <!--                    <scope>runtime</scope>-->
            <!--                </dependency>-->
            <!--            </dependencies>-->
            <!--        </plugin>-->
        </plugins>
    </build>

</project>
